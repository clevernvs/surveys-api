// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
// output   = "../generated/prisma"

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  projects   Project[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
}

model Project {
  id               Int             @id @default(autoincrement())
  title            String
  description      String
  project_type_id  Int
  language_id      Int
  category_id      Int
  sample_source_id Int
  community_id     Int
  status_id        Int
  sample_size      Int
  start_date       DateTime
  end_date         DateTime
  company_id       Int
  company          Company         @relation(fields: [company_id], references: [id])
  questionnaires   Questionnaire[]
  created_at       DateTime        @default(now())
  updated_at       DateTime        @updatedAt
}

model Questionnaire {
  id                 Int        @id @default(autoincrement())
  title              String
  filter_id          Int
  randomized_answers Boolean    @default(false)
  status_id          Int
  project_id         Int
  project            Project    @relation(fields: [project_id], references: [id])
  questions          Question[]
  created_at         DateTime   @default(now())
  updated_at         DateTime   @updatedAt
}

model Question {
  id                Int           @id @default(autoincrement())
  title             String
  question_type_id  Int
  required          Boolean       @default(false)
  questionnaire_id  Int
  questionnaire     Questionnaire @relation(fields: [questionnaire_id], references: [id])
  answers           Answer[]
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt
}

model Answer {
  id                  Int      @id @default(autoincrement())
  title               String
  question_id         Int
  fixed               Boolean  @default(false)
  numeric_order       Int
  skip_to_question_id Int?
  question            Question @relation(fields: [question_id], references: [id])
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
}
